spring:
  application:
    name: inventory-service
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/commerce}
    username: ${SPRING_DATASOURCE_USERNAME:commerce}
    password: ${SPRING_DATASOURCE_PASSWORD:commerce123}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    timeout: 2000ms
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
        enable.idempotence: true
    consumer:
      group-id: inventory-service
      properties:
        spring.json.trusted.packages: "com.commerce.event"
    listener:
      missing-topics-fatal: false

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.commerce: INFO
    org.springframework: WARN

inventory:
  events:
    enabled: true
    topic: inventory-events
